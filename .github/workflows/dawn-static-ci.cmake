# This file caches variables which are platform specific.
if (WIN32)
    set(DAWN_USE_BUILT_DXC ON CACHE BOOL "")
    set(CMAKE_SYSTEM_VERSION "$ENV{WIN10_SDK_VERSION}" CACHE STRING "")
    set(CMAKE_WINDOWS_KITS_10_DIR "$ENV{WIN10_SDK_PATH}" CACHE STRING "")
    set(CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION "$ENV{WIN10_SDK_VERSION}" CACHE STRING "")
endif ()
set(DAWN_FETCH_DEPENDENCIES ON CACHE BOOL "")

if (WIN32)
    set(CMAKE_C_COMPILER_LAUNCHER "sccache" CACHE STRING "" FORCE)
    set(CMAKE_CXX_COMPILER_LAUNCHER "sccache" CACHE STRING "" FORCE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /FS" CACHE STRING "C++ compiler flags" FORCE)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /FS" CACHE STRING "C compiler flags" FORCE)
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /FS" CACHE STRING "C debug compiler flags" FORCE)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /FS" CACHE STRING "C++ debug compiler flags" FORCE)
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /FS" CACHE STRING "C release compiler flags" FORCE)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /FS" CACHE STRING "C++ release compiler flags" FORCE)
else ()
    set(CMAKE_C_COMPILER_LAUNCHER "ccache" CACHE STRING "" FORCE)
    set(CMAKE_CXX_COMPILER_LAUNCHER "ccache" CACHE STRING "" FORCE)
endif ()